import{S as P,i as Q,s as R,n as c,p as C,q as V,j as X,r as v,a as Y,u as t,m as Z,v as x,w as ee,b as te,t as ae,d as oe,k as ne,x as se,o as ue,y as ge}from"./index-b18406a2.js";import{V as le,g as ie,d as re}from"./GitHub-71680ddc.js";import"./_commonjsHelpers-725317a4.js";const H={$schema:"https://vega.github.io/schema/vega/v5.json",width:400,height:200,padding:{left:5,right:5,top:5,bottom:5},data:[{name:"table",values:[{category:"A",amount:28},{category:"B",amount:55},{category:"C",amount:43},{category:"D",amount:91},{category:"E",amount:81},{category:"F",amount:53},{category:"G",amount:19},{category:"H",amount:87}]}],signals:[{name:"tooltip",value:{},on:[{events:"rect:mouseover",update:"datum"},{events:"rect:mouseout",update:"{}"}]}],scales:[{name:"xscale",type:"band",domain:{data:"table",field:"category"},range:"width"},{name:"yscale",domain:{data:"table",field:"amount"},nice:!0,range:"height"}],axes:[{orient:"bottom",scale:"xscale"},{orient:"left",scale:"yscale"}],marks:[{type:"rect",from:{data:"table"},encode:{update:{x:{scale:"xscale",field:"category",offset:1},width:{scale:"xscale",band:1,offset:-1},y:{scale:"yscale",field:"amount"},y2:{scale:"yscale",value:0},fill:{value:"steelblue"}},hover:{fill:{value:"red"}}}},{type:"text",encode:{enter:{align:{value:"center"},baseline:{value:"bottom"},fill:{value:"#333"}},update:{x:{scale:"xscale",signal:"tooltip.category",band:.5},y:{scale:"yscale",signal:"tooltip.amount",offset:-2},text:{signal:"tooltip.amount"},fillOpacity:[{test:"datum === tooltip",value:0},{value:1}]}}}]},ce={$schema:"https://vega.github.io/schema/vega/v5.json",width:400,height:200,padding:{left:5,right:5,top:5,bottom:5},data:[{name:"table",values:[{category:"A",amount:28},{category:"B",amount:55},{category:"C",amount:43},{category:"D",amount:91},{category:"E",amount:81},{category:"F",amount:53},{category:"G",amount:19},{category:"H",amount:87}]}],signals:[{name:"tooltip",value:{},on:[{events:"rect:mouseover",update:"datum"},{events:"rect:mouseout",update:"{}"}]}],scales:[{name:"xscale",type:"band",domain:{data:"table",field:"category"},range:"width"},{name:"yscale",domain:{data:"table",field:"amount"},nice:!0,range:"height"}],axes:[{orient:"bottom",scale:"xscale"},{orient:"left",scale:"yscale"}],marks:[{type:"rect",from:{data:"table"},encode:{update:{x:{scale:"xscale",field:"category",offset:10},width:{scale:"xscale",band:.5,offset:-1},y:{scale:"yscale",field:"amount"},y2:{scale:"yscale",value:0},fill:{value:"green"}},hover:{fill:{value:"yellow"}}}},{type:"text",encode:{enter:{align:{value:"center"},baseline:{value:"bottom"},fill:{value:"#333"}},update:{x:{scale:"xscale",signal:"tooltip.category",band:.5},y:{scale:"yscale",signal:"tooltip.amount",offset:-2},text:{signal:"tooltip.amount"},fillOpacity:[{test:"datum === tooltip",value:0},{value:1}]}}}]};function he(a){let n,o,e,u,m,i,_,p,f,d,r,l,D,y,k,g,b,w,q,T;return l=new le({props:{data:a[2],spec:a[3],options:a[0],signalListeners:a[4]}}),{c(){n=c("main"),o=c("div"),e=c("div"),u=c("h3"),u.innerHTML="<code>&lt;Vega&gt;</code> Svelte Component",m=C(),i=c("button"),i.textContent="Toggle Spec",_=C(),p=c("button"),p.textContent="Update Data",f=C(),d=c("button"),d.innerHTML=`<img src="${ie}" alt="github mark" class="svelte-14y2pdq"/> <div>View on GitHub</div>`,r=V(`
	Will recompile when spec changes and update when data changes.
	`),X(l.$$.fragment),D=C(),y=c("div"),k=V("Hover info: "),g=c("code"),b=V(a[1]),v(i,"class","common-button svelte-14y2pdq"),v(p,"class","common-button svelte-14y2pdq"),v(e,"class","row-content svelte-14y2pdq"),v(d,"class","github-button svelte-14y2pdq"),v(o,"class","head svelte-14y2pdq"),v(n,"class","content svelte-14y2pdq")},m(s,h){Y(s,n,h),t(n,o),t(o,e),t(e,u),t(e,m),t(e,i),t(e,_),t(e,p),t(o,f),t(o,d),t(n,r),Z(l,n,null),t(n,D),t(n,y),t(y,k),t(y,g),t(g,b),w=!0,q||(T=[x(i,"click",a[5]),x(p,"click",a[6]),x(d,"click",a[7])],q=!0)},p(s,[h]){const S={};h&4&&(S.data=s[2]),h&8&&(S.spec=s[3]),h&1&&(S.options=s[0]),l.$set(S),(!w||h&2)&&ee(b,s[1])},i(s){w||(te(l.$$.fragment,s),w=!0)},o(s){ae(l.$$.fragment,s),w=!1},d(s){s&&oe(n),ne(l),q=!1,se(T)}}}function ve(a,n,o){let{options:e={}}=n,u="",m=re,i=H;const _={tooltip:(...r)=>o(1,u=JSON.stringify(r))};function p(){i===H?o(3,i=ce):o(3,i=H)}function f(){const r=[];for(let l=1;l<=20;l++)r.push({amount:Math.round(Math.random()*100),category:String.fromCharCode(65+l)});o(2,m={table:r})}const d=()=>window.open("https://github.com/vega/svelte-vega");return a.$$set=r=>{"options"in r&&o(0,e=r.options)},[e,u,m,i,_,p,f,d]}class de extends P{constructor(n){super(),Q(this,n,ve,he,R,{options:0})}}const pe=de;de.__docgen={version:3,name:"SvelteVegaDemo.svelte",data:[{visibility:"public",description:null,keywords:[],name:"options",kind:"let",static:!1,readonly:!1,type:{kind:"type",text:"object",type:"object"}}],computed:[],methods:[],components:[],description:null,keywords:[],events:[],slots:[],refs:[]};function fe(a){let n,o,e,u,m,i,_,p,f,d,r,l,D,y,k,g,b,w,q,T;return l=new le({props:{data:a[1],spec:a[2],options:a[3],signalListeners:a[4]}}),{c(){n=c("main"),o=c("div"),e=c("div"),u=c("h3"),u.innerHTML="<code>&lt;Vega&gt;</code> Svelte Component",m=C(),i=c("button"),i.textContent="Toggle Spec",_=C(),p=c("button"),p.textContent="Update Data",f=C(),d=c("button"),d.innerHTML=`<img src="${ie}" alt="github mark" class="svelte-14y2pdq"/> <div>View on GitHub</div>`,r=V(`
	Will recompile when spec changes and update when data changes.
	`),X(l.$$.fragment),D=C(),y=c("div"),k=V("Hover info: "),g=c("code"),b=V(a[0]),v(i,"class","common-button svelte-14y2pdq"),v(p,"class","common-button svelte-14y2pdq"),v(e,"class","row-content svelte-14y2pdq"),v(d,"class","github-button svelte-14y2pdq"),v(o,"class","head svelte-14y2pdq"),v(n,"class","content svelte-14y2pdq")},m(s,h){Y(s,n,h),t(n,o),t(o,e),t(e,u),t(e,m),t(e,i),t(e,_),t(e,p),t(o,f),t(o,d),t(n,r),Z(l,n,null),t(n,D),t(n,y),t(y,k),t(y,g),t(g,b),w=!0,q||(T=[x(i,"click",a[5]),x(p,"click",a[6]),x(d,"click",a[10])],q=!0)},p(s,[h]){const S={};h&2&&(S.data=s[1]),h&4&&(S.spec=s[2]),l.$set(S),(!w||h&1)&&ee(b,s[0])},i(s){w||(te(l.$$.fragment,s),w=!0)},o(s){ae(l.$$.fragment,s),w=!1},d(s){s&&oe(n),ne(l),q=!1,se(T)}}}function ye(a,n,o){let e,u={padding:20},m=!0,i,_="",p=re,f=100,d=100,r=H;const l={tooltip:(...g)=>o(0,_=JSON.stringify(g))};function D(){r===H?o(9,r=ce):o(9,r=H)}function y(){const g=[];for(let b=1;b<=20;b++)g.push({amount:Math.round(Math.random()*100),category:String.fromCharCode(65+b)});o(1,p={table:g})}ue(()=>{i=setInterval(()=>{o(7,f=(e.width?e.width:0)+(m?1:-1)),o(8,d=(e.height?e.height:0)+(m?1:-1)),m=m&&(e.width?e.width:0)<400||!m&&(e.width?e.width:0)===100},10)}),ge(()=>{clearInterval(i)});const k=()=>window.open("https://github.com/vega/svelte-vega");return a.$$.update=()=>{a.$$.dirty&896&&o(2,e={...r,width:f,height:d})},[_,p,e,u,l,D,y,f,d,r,k]}class me extends P{constructor(n){super(),Q(this,n,ye,fe,R,{})}}me.__docgen={version:3,name:"ChangingDimensionDemo.svelte",data:[],computed:[],methods:[],components:[],description:null,keywords:[],events:[],slots:[],refs:[]};const Ce={title:"svelte-vega/Vega",component:pe,argTypes:{}},$=({...a})=>({Component:pe,props:a}),be=({...a})=>({Component:me,props:a}),j=$.bind({}),M=$.bind({});M.args={options:{width:300}};const L=$.bind({});L.args={options:{height:300}};const O=be.bind({});var G,U,W;j.parameters={...j.parameters,docs:{...(G=j.parameters)==null?void 0:G.docs,source:{originalSource:`({
  ...args
}) => ({
  Component: SvelteVegaDemo,
  props: args
})`,...(W=(U=j.parameters)==null?void 0:U.docs)==null?void 0:W.source}}};var z,E,I;M.parameters={...M.parameters,docs:{...(z=M.parameters)==null?void 0:z.docs,source:{originalSource:`({
  ...args
}) => ({
  Component: SvelteVegaDemo,
  props: args
})`,...(I=(E=M.parameters)==null?void 0:E.docs)==null?void 0:I.source}}};var A,B,F;L.parameters={...L.parameters,docs:{...(A=L.parameters)==null?void 0:A.docs,source:{originalSource:`({
  ...args
}) => ({
  Component: SvelteVegaDemo,
  props: args
})`,...(F=(B=L.parameters)==null?void 0:B.docs)==null?void 0:F.source}}};var J,N,K;O.parameters={...O.parameters,docs:{...(J=O.parameters)==null?void 0:J.docs,source:{originalSource:`({
  ...args
}) => ({
  Component: ChangingDimensionDemo,
  props: args
})`,...(K=(N=O.parameters)==null?void 0:N.docs)==null?void 0:K.source}}};const De=["Demo","Width300","Height300","ChangingSize"];export{O as ChangingSize,j as Demo,L as Height300,M as Width300,De as __namedExportsOrder,Ce as default};
